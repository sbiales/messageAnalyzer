[{"C:\\Users\\siena\\repositories\\messageAnalyzer\\analyzer-ui\\src\\index.js":"1","C:\\Users\\siena\\repositories\\messageAnalyzer\\analyzer-ui\\src\\reportWebVitals.js":"2","C:\\Users\\siena\\repositories\\messageAnalyzer\\analyzer-ui\\src\\App.js":"3","C:\\Users\\siena\\repositories\\messageAnalyzer\\analyzer-ui\\src\\components\\FileUploadPage.js":"4","C:\\Users\\siena\\repositories\\messageAnalyzer\\analyzer-ui\\src\\components\\Header.js":"5","C:\\Users\\siena\\repositories\\messageAnalyzer\\analyzer-ui\\src\\components\\PrivacyPage.js":"6","C:\\Users\\siena\\repositories\\messageAnalyzer\\analyzer-ui\\src\\components\\Results.js":"7","C:\\Users\\siena\\repositories\\messageAnalyzer\\analyzer-ui\\src\\components\\ResultComponents.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":765,"mtime":1612379977074,"results":"12","hashOfConfig":"10"},{"size":15738,"mtime":1618235399644,"results":"13","hashOfConfig":"10"},{"size":1290,"mtime":1618232803914,"results":"14","hashOfConfig":"10"},{"size":588,"mtime":1611765005644,"results":"15","hashOfConfig":"10"},{"size":1260,"mtime":1618271868917,"results":"16","hashOfConfig":"10"},{"size":7733,"mtime":1618272023224,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"wkirz1",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\siena\\repositories\\messageAnalyzer\\analyzer-ui\\src\\index.js",[],["36","37"],"C:\\Users\\siena\\repositories\\messageAnalyzer\\analyzer-ui\\src\\reportWebVitals.js",[],"C:\\Users\\siena\\repositories\\messageAnalyzer\\analyzer-ui\\src\\App.js",[],"C:\\Users\\siena\\repositories\\messageAnalyzer\\analyzer-ui\\src\\components\\FileUploadPage.js",["38","39","40","41"],"import React, { Component } from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport { Dialog, Toolbar, Paper, Grid, Typography, Button, Checkbox, FormControl, FormControlLabel, TextField, InputLabel, MenuItem, Select, RadioGroup, Radio, FormLabel } from '@material-ui/core';\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst MAX_SIZE = 20971520; // 20MB\r\n\r\nconst dzoneStyle = {\r\n    display: 'flex',\r\n    borderRadius: '20px',\r\n    background: '#e6e6e6',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    fontSize: '16px',\r\n    flexDirection: 'column',\r\n    border: '4px dashed #4b9ec9',\r\n    height: '150px',\r\n    padding: '20px'\r\n  };\r\n\r\nclass ErrorDialog extends Component {\r\n    render() {\r\n        let table = [];\r\n\r\n        this.props.errors.forEach(function(obj) {\r\n          let children = [];\r\n          children.push(<td>{obj.name}: </td>);\r\n          children.push(<td>{obj.reason}</td>);\r\n          table.push(<tr>{children}</tr>)\r\n        });\r\n    \r\n        return(\r\n            <div>\r\n                <Toolbar className=\"errorHeader\">Upload Errors</Toolbar>\r\n                <table className=\"errorTable\">\r\n                    <tbody>\r\n                        {table}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nclass FileUploadPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          showUploadError: false,\r\n          uploadErrorMsgs: [],\r\n          file: null,\r\n          optIn: false,\r\n          u1Age: null,\r\n          u2Age: null,\r\n          u1Lang: null,\r\n          u2Lang: null,\r\n          u1Gender: null,\r\n          u2Gender: null,\r\n          relationship: null,\r\n        };\r\n    }\r\n\r\n    onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        var data = new FormData();\r\n        data.append('file', this.state.file);\r\n        data.append('optIn', this.state.optIn);\r\n        if (this.state.optIn) {\r\n            data.append('user1', JSON.stringify({\r\n                age: this.state.u1Age,\r\n                lang: this.state.u1lang,\r\n                gender: this.state.u1Gender,\r\n            }));\r\n            data.append('user2', JSON.stringify({\r\n                age: this.state.u2Age,\r\n                lang: this.state.u2lang,\r\n                gender: this.state.u2Gender,\r\n            }));\r\n            data.append('relationship', this.state.relationship);\r\n        }\r\n        var res = await axios({\r\n            method: \"POST\",\r\n            url: \"http://localhost:3011/upload\",\r\n            data: data,\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data; boundary=${form._boundary}',\r\n              'Access-Control-Allow-Origin': '*'\r\n            }\r\n        }).catch(error => {\r\n            if (error.response) {\r\n                this.setState({\r\n                    uploadErrorMsgs: [...this.state.uploadErrorMsgs, {name: this.state.file.name, reason: (error.response && error.response.hasOwnProperty('data')) ? error.response.data : error.response }],\r\n                    showUploadError: true\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    uploadErrorMsgs: [...this.state.uploadErrorMsgs, {name: this.state.file.name, reason: 'An unknown error occurred in upload' }],\r\n                    showUploadError: true\r\n                });\r\n            }\r\n        });\r\n        if (res) {\r\n            // this.setState({ fileId: res.data});\r\n            localStorage.setItem('id', res.data);\r\n            localStorage.setItem('optIn', this.state.optIn);\r\n            this.props.history.push('/results');\r\n        }\r\n\r\n    }\r\n\r\n    onDrop = acceptedFiles => {\r\n        console.log(acceptedFiles)\r\n          // Initial FormData\r\n          this.setState({file: acceptedFiles[0]});\r\n          /*const formData = new FormData();\r\n          formData.append(\"file\", file);\r\n          // Make an AJAX upload request using Axios\r\n          return axios.post(\"localhost/uploadFile\", formData, {\r\n            headers: { \"Content-Type\": \"multipart/form-data\" },\r\n          }).catch(error => {\r\n            this.setState({\r\n              uploadErrorMsgs: [...this.state.uploadErrorMsgs, {name: file.name, reason: error.response.data}],\r\n              showUploadError: true});\r\n          });*/\r\n      }\r\n\r\n      onDropRejected = rejectedFiles => {\r\n        const sizeMsg = `The file exceeds the maximum size limit (${MAX_SIZE} bytes)`;\r\n        const defaultMsg = \"An error occurred during upload\";\r\n        var errorFiles = [];\r\n        rejectedFiles.forEach(function(file) {\r\n          if(file.size > MAX_SIZE) {\r\n            errorFiles.push({\r\n              name: file.name,\r\n              reason: sizeMsg});\r\n          }\r\n          else {\r\n            errorFiles.push({\r\n              name: file.name,\r\n              reason: defaultMsg});\r\n          }\r\n        });\r\n        this.setState({\r\n          uploadErrorMsgs: [...this.state.uploadErrorMsgs, ...errorFiles],\r\n          showUploadError: true\r\n        });\r\n      }\r\n\r\n      render() {\r\n          return(\r\n            <div style={{padding: '20px'}}>\r\n                <Grid container column spacing={3} justify='center' alignItems='center'>\r\n                    <Grid item xs={8}>\r\n                    <Paper>\r\n                    <Typography>\r\n                    Have you ever wondered how much you and your friends really text each other? What your most used emojis are? What you really talk about the most? Maybe you're curious just how much you really use \"lol\" compared to your friends.\r\n                    </Typography>\r\n                    <Typography>\r\n                    With this tool, you can see all of these statistics and more. All you have to do is download your message history from either Telegram or WhatsApp, and upload it to this page. Don't worry! It will get sent to our server for analysis, but we won't keep your data unless you explicitly give us permission, and even then, it will be anonymized and only used for research purposes. Enjoy!\r\n                    </Typography>\r\n                </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={8}>\r\n                    <Paper style={{padding: 10}}>\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <div style={{border: '4px dashed #4b9ec9'}}>\r\n                                <Dropzone \r\n                                    onDrop={this.onDrop}\r\n                                    onDropRejected={this.onDropRejected}\r\n                                    multiple={false}\r\n                                    accept=\".json,.txt\"\r\n                                    // maxSize={MAX_SIZE}\r\n                                >\r\n                                    {({getRootProps, getInputProps}) => (\r\n                                        <div {...getRootProps()}>\r\n                                        <input {...getInputProps()} />\r\n                                        <Typography variant='h5'>Drag and drop your Telegram or WhatsApp file, or click to select</Typography>\r\n                                        </div>\r\n                                    )}\r\n                                </Dropzone>\r\n                            </div>\r\n                            <div style={{textAlign: 'left'}}>\r\n                            <Typography>Selected file: {this.state.file ? this.state.file.name : ''}</Typography>\r\n                            <FormControlLabel\r\n                                control={<Checkbox \r\n                                    checked={this.state.optIn}\r\n                                    onChange={(event) => {this.setState({optIn: event.target.checked})}}\r\n                                    name='optIn'\r\n                                    />}\r\n                                label='Yes, you may save my file anonymously for research purposes. I understand that my data will never be sold or used for other purposes.'\r\n                            />\r\n                            </div>\r\n                            {this.state.optIn ?\r\n                            <div style={{width: '100%', textAlign: 'left', display: 'flex', flexDirection: 'column'}}>\r\n                            <Typography variant='h6'>Please tell us a little bit more about yourself:</Typography>\r\n                            <TextField \r\n                                type=\"number\"\r\n                                value={this.state.u1Age}\r\n                                onChange={(event) => {this.setState({u1Age: event.target.value})}}\r\n                                InputProps={{\r\n                                    inputProps: { \r\n                                        max: 100, min: 1 \r\n                                    }\r\n                                }}\r\n                                label=\"How old are you?\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                  }}\r\n                            />\r\n                            <TextField \r\n                                type=\"number\"\r\n                                value={this.state.u2Age}\r\n                                onChange={(event) => {this.setState({u2Age: event.target.value})}}\r\n                                InputProps={{\r\n                                    inputProps: { \r\n                                        max: 100, min: 1 \r\n                                    }\r\n                                }}\r\n                                label=\"How old is your conversation partner (interlocutor)?\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                  }}\r\n                            />\r\n                            <FormControl>\r\n                                <InputLabel id=\"u1-lang-label\" shrink={true}>What is your native language?</InputLabel>\r\n                                <Select\r\n                                labelId=\"u1-lang-label\"\r\n                                id=\"u1-lang\"\r\n                                value={this.state.u1Lang}\r\n                                onChange={(event) => {this.setState({u1Lang: event.target.value})}}\r\n                                >\r\n                                <MenuItem value={'en'}>English</MenuItem>\r\n                                <MenuItem value={'sp'}>Spanish</MenuItem>\r\n                                <MenuItem value={'it'}>Italian</MenuItem>\r\n                                <MenuItem value={'ar'}>Arabic</MenuItem>\r\n                                <MenuItem value={'ge'}>German</MenuItem>\r\n                                <MenuItem value={'o'}>Other</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                            <FormControl>\r\n                                <InputLabel id=\"u2-lang-label\" shrink={true}>What is your conversation partner's language?</InputLabel>\r\n                                <Select\r\n                                labelId=\"u2-lang-label\"\r\n                                id=\"u2-lang\"\r\n                                value={this.state.u2Lang}\r\n                                onChange={(event) => {this.setState({u2Lang: event.target.value})}}\r\n                                >\r\n                                <MenuItem value={'en'}>English</MenuItem>\r\n                                <MenuItem value={'sp'}>Spanish</MenuItem>\r\n                                <MenuItem value={'it'}>Italian</MenuItem>\r\n                                <MenuItem value={'ar'}>Arabic</MenuItem>\r\n                                <MenuItem value={'ge'}>German</MenuItem>\r\n                                <MenuItem value={'o'}>Other</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                            <FormControl component=\"fieldset\">\r\n                                <FormLabel component=\"legend\">What is your gender?</FormLabel>\r\n                                <RadioGroup row aria-label=\"gender1\" name=\"u1Gender\" value={this.state.u1Gender} onChange={(event) => {this.setState({u1Gender: event.target.value})}}>\r\n                                    <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\r\n                                    <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\r\n                                    <FormControlLabel value=\"nonbinary\" control={<Radio />} label=\"Non-Binary\" />\r\n                                    <FormControlLabel value=\"na\" control={<Radio />} label=\"Prefer not to answer\" />\r\n                                </RadioGroup>\r\n                            </FormControl>\r\n                            <FormControl component=\"fieldset\">\r\n                                <FormLabel component=\"legend\">What is your conversation partner's gender?</FormLabel>\r\n                                <RadioGroup row aria-label=\"gender2\" name=\"u2Gender\" value={this.state.u2Gender} onChange={(event) => {this.setState({u2Gender: event.target.value})}}>\r\n                                    <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\r\n                                    <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\r\n                                    <FormControlLabel value=\"nonbinary\" control={<Radio />} label=\"Non-Binary\" />\r\n                                    <FormControlLabel value=\"na\" control={<Radio />} label=\"Prefer not to answer\" />\r\n                                </RadioGroup>\r\n                            </FormControl>\r\n                            <FormControl component=\"fieldset\">\r\n                                <FormLabel component=\"legend\">What type of relationship do you have?</FormLabel>\r\n                                <RadioGroup row aria-label=\"relationship\" name=\"relationship\" value={this.state.relationship} onChange={(event) => {this.setState({relationship: event.target.value})}}>\r\n                                    <FormControlLabel value=\"romantic\" control={<Radio />} label=\"Romantic\" />\r\n                                    <FormControlLabel value=\"friendship\" control={<Radio />} label=\"Friendship\" />\r\n                                    <FormControlLabel value=\"family\" control={<Radio />} label=\"Family\" />\r\n                                    <FormControlLabel value=\"coworker\" control={<Radio />} label=\"Coworker\" />\r\n                                    <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\r\n                                </RadioGroup>\r\n                            </FormControl>\r\n                            </div>\r\n                            :''}\r\n                            <Button type=\"submit\">Analyze</Button>\r\n                        </form>\r\n                </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n                \r\n                \r\n                {this.state.fileId ? \r\n                <Paper>\r\n                    <Typography>Thanks for submitting your file! In the future, you will be taken to a page to see your analysis</Typography>\r\n                </Paper>\r\n                : ''}\r\n                <Dialog\r\n                open={this.state.showUploadError}\r\n                onClose={() => this.setState({showUploadError: false, uploadErrorMsgs: []})}\r\n                style={{padding: \"5px\"}}\r\n                >\r\n                    <ErrorDialog errors={this.state.uploadErrorMsgs}/>\r\n                </Dialog>\r\n            </div>\r\n          );\r\n      }\r\n}\r\n\r\nexport default withRouter(FileUploadPage);\r\n","C:\\Users\\siena\\repositories\\messageAnalyzer\\analyzer-ui\\src\\components\\Header.js",[],"C:\\Users\\siena\\repositories\\messageAnalyzer\\analyzer-ui\\src\\components\\PrivacyPage.js",[],"C:\\Users\\siena\\repositories\\messageAnalyzer\\analyzer-ui\\src\\components\\Results.js",["42","43"],"C:\\Users\\siena\\repositories\\messageAnalyzer\\analyzer-ui\\src\\components\\ResultComponents.js",["44"],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":4,"column":10,"nodeType":"51","messageId":"52","endLine":4,"endColumn":14},{"ruleId":"49","severity":1,"message":"53","line":4,"column":16,"nodeType":"51","messageId":"52","endLine":4,"endColumn":21},{"ruleId":"49","severity":1,"message":"54","line":10,"column":7,"nodeType":"51","messageId":"52","endLine":10,"endColumn":17},{"ruleId":"55","severity":1,"message":"56","line":88,"column":31,"nodeType":"57","messageId":"58","endLine":88,"endColumn":80},{"ruleId":"49","severity":1,"message":"59","line":2,"column":10,"nodeType":"51","messageId":"52","endLine":2,"endColumn":20},{"ruleId":"49","severity":1,"message":"60","line":2,"column":22,"nodeType":"51","messageId":"52","endLine":2,"endColumn":27},{"ruleId":"49","severity":1,"message":"61","line":4,"column":49,"nodeType":"51","messageId":"52","endLine":4,"endColumn":61},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'Field' is defined but never used.","'dzoneStyle' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'Typography' is defined but never used.","'Paper' is defined but never used.","'VictoryTheme' is defined but never used.","no-global-assign","no-unsafe-negation"]